// Automatically generated by MockGen. DO NOT EDIT!
// Source: strategy.go

package kuji

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of KujiStrategy interface
type MockKujiStrategy struct {
	ctrl     *gomock.Controller
	recorder *_MockKujiStrategyRecorder
}

// Recorder for MockKujiStrategy (not exported)
type _MockKujiStrategyRecorder struct {
	mock *MockKujiStrategy
}

func NewMockKujiStrategy(ctrl *gomock.Controller) *MockKujiStrategy {
	mock := &MockKujiStrategy{ctrl: ctrl}
	mock.recorder = &_MockKujiStrategyRecorder{mock}
	return mock
}

func (_m *MockKujiStrategy) EXPECT() *_MockKujiStrategyRecorder {
	return _m.recorder
}

func (_m *MockKujiStrategy) PickOneByKey(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "PickOneByKey", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKujiStrategyRecorder) PickOneByKey(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PickOneByKey", arg0)
}

func (_m *MockKujiStrategy) PickOneByKeyAndIndex(_param0 string, _param1 int64) (string, error) {
	ret := _m.ctrl.Call(_m, "PickOneByKeyAndIndex", _param0, _param1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKujiStrategyRecorder) PickOneByKeyAndIndex(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PickOneByKeyAndIndex", arg0, arg1)
}

func (_m *MockKujiStrategy) PickAndDeleteOneByKey(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "PickAndDeleteOneByKey", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKujiStrategyRecorder) PickAndDeleteOneByKey(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PickAndDeleteOneByKey", arg0)
}

func (_m *MockKujiStrategy) RegisterCandidatesWithKey(_param0 string, _param1 []KujiCandidate) (int64, error) {
	ret := _m.ctrl.Call(_m, "RegisterCandidatesWithKey", _param0, _param1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKujiStrategyRecorder) RegisterCandidatesWithKey(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RegisterCandidatesWithKey", arg0, arg1)
}

func (_m *MockKujiStrategy) Len(_param0 string) (int64, error) {
	ret := _m.ctrl.Call(_m, "Len", _param0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKujiStrategyRecorder) Len(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Len", arg0)
}

func (_m *MockKujiStrategy) List(_param0 string) ([]string, error) {
	ret := _m.ctrl.Call(_m, "List", _param0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKujiStrategyRecorder) List(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List", arg0)
}
